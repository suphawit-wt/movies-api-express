name: CI/CD Movies API
on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PROJECT_ID: movie-api-mongodb
  SERVICE_ID: movies-api-service
  CREDENTIALS_ID: github-registry

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["18"]
    name: Test using Node.js ${{ matrix.node-version }}
    steps:
      # Step 1 - Checkout Repository
      - name: Checkout
        uses: actions/checkout@v3

      # Step 2 - Sepup Node.js
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
          cache-dependency-path: yarn.lock

      # Step 3 - Install dependencies
      - name: Install dependencies
        run: yarn install

      # Step 4 - Testing
      - name: Testing
        run: yarn test
        env:
          MONGO_URL: mongodb+srv://username:password@clusterone.gcnbb.mongodb.net/?retryWrites=true&w=majority

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      # Step 1 - Checkout Repository
      - name: Checkout
        uses: actions/checkout@v3

      # Step 2 - Authenticate with the container registry
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3 - Extract metadata
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Step 4 - Build and Push Docker images
      - name: Build and Push Docker images
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Step 5 - Deploy to Northflank
      - name: Deploy to Northflank
        uses: northflank/deploy-to-northflank@v1
        with:
          northflank-api-key: ${{ secrets.NORTHFLANK_API_KEY }}
          project-id: ${{ env.PROJECT_ID }}
          service-id: ${{ env.SERVICE_ID }}
          image-path: ${{ steps.meta.outputs.tags }}
          credentials-id: ${{ env.CREDENTIALS_ID }}
